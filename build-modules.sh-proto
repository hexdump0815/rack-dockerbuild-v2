#!/bin/bash

# exit on errors
#set -e

WORKDIR=`dirname $0`
cd $WORKDIR
WORKDIR=`pwd`

cd library/repos
for i in * ; do
  if [ -f ${i}/plugin.json ]; then
    # we only want v2 plugins
    grep -q '"version": "2' ${i}/plugin.json
    if [ "$?" = "0" ]; then
      echo ""
      echo "=== $i ==="
      echo ""
      cd $i
      # dbRackFormulaOne currently uses too many ressources during
      # build on small systems, so only use one compile thread for it
      if [ "$i" = "dbRackFormulaOne" ]; then
        PARALLEL="1"
      else
        PARALLEL="4"
      fi
      #  RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL} clean
      RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL} dep
      RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL}
      RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL} dist
      cd ..
    fi
  fi
done
cd ../..

# go back to a defined starting point to be on the safe side
cd ${WORKDIR}

cd plugins
for i in * ; do
  echo ""
  echo "=== $i ==="
  echo ""
  cd $i
  if [ "$i" = "dbRackCsound" ]; then
    # this is for the dbRackCsound extra plugin: it brings its own libraries with
    # it, but only for linux x86_64, so the idea is to install the system
    # libraries instead and link against them to not having to build them by hand
    apt-get -y install libcsound64-dev libsndfile1-dev
    rm -f lib/linux/lib*
    cp -a /usr/lib/aarch64-linux-gnu/libsndfile.a /usr/lib/arm-linux-gnueabihf/libsndfile.a lib/linux
    cp -a /usr/lib/aarch64-linux-gnu/libcsound64.so* /usr/lib/arm-linux-gnueabihf/libcsound64.so* lib/linux
    cp -a /usr/lib/x86_64-linux-gnu/libsndfile.a /usr/lib/i386-linux-gnu/libsndfile.a lib/linux
    cp -a /usr/lib/x86_64-linux-gnu/libcsound64.so* /usr/lib/i386-linux-gnu/libcsound64.so* lib/linux
  fi
  # Volume1 currently uses too many ressources during
  # build on small systems, so only use one compile thread for it
  if [ "$i" = "Volume1" ]; then
    PARALLEL="1"
  else
    PARALLEL="4"
  fi
#  RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL} clean
  RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL} dep
  RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL}
  RACK_DIR=${WORKDIR}/Rack make -j${PARALLEL} dist
  cd ..
done
cd ..
